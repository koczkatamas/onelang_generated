BasePrinter::numValue: null
- Variable: numValue
  - Literal (numeric): "42"

BasePrinter::getValue(): TsString
  - Return
    - Literal (string): "Base"

BasePrinter::printIt(): void
  - ExpressionStatement
    - Call
      - PropertyAccess (.log)
        - Identifier: console
      - TemplateString
        - Call
          - PropertyAccess (.getValue)
            - Identifier: this

BasePrinter::someBaseFunc(): TsNumber
  - Return
    - PropertyAccess (.numValue)
      - Identifier: this

ChildPrinter::getValue(): TsString
  - Return
    - Literal (string): "Child"

TestClass::getPrinter(name: TsString): IPrinter
  - Variable: result [IPrinter]
    - Conditional
      - Binary: ==
        - Identifier: name
        - Literal (string): "child"
      - New ChildPrinter
      - New BasePrinter
  - Return
    - Identifier: result

TestClass::testMethod(): void
  - Variable: basePrinter
    - Call
      - PropertyAccess (.getPrinter)
        - Identifier: this
      - Literal (string): "base"
  - Variable: childPrinter
    - Call
      - PropertyAccess (.getPrinter)
        - Identifier: this
      - Literal (string): "child"
  - ExpressionStatement
    - Call
      - PropertyAccess (.printIt)
        - Identifier: basePrinter
  - ExpressionStatement
    - Call
      - PropertyAccess (.printIt)
        - Identifier: childPrinter
  - ExpressionStatement
    - Call
      - PropertyAccess (.log)
        - Identifier: console
      - TemplateString
        - Call
          - PropertyAccess (.someBaseFunc)
            - Identifier: basePrinter
        - Call
          - PropertyAccess (.someBaseFunc)
            - Identifier: childPrinter
  - Comment: "\n"
  - Variable: baseP2
    - New BasePrinter
  - Variable: childP2
    - New ChildPrinter
  - ExpressionStatement
    - Call
      - PropertyAccess (.log)
        - Identifier: console
      - TemplateString
        - PropertyAccess (.numValue)
          - Identifier: baseP2
        - PropertyAccess (.numValue)
          - Identifier: childP2

