TestClass::testMethod(): any
  - Variable: $value [PhpNumber]
    - Binary: - [PhpNumber]
      - Binary: + [PhpNumber]
        - Literal (numeric): "1" [PhpNumber]
        - Binary: * [PhpNumber]
          - Literal (numeric): "2" [PhpNumber]
          - Literal (numeric): "3" [PhpNumber]
      - Literal (numeric): "4" [PhpNumber]
  - Variable: $map_ [PhpMap<OneString, PhpNumber>]
    - MapLiteral [OneMap<OneString, PhpNumber>]
      - Variable: a [PhpNumber]
        - Literal (numeric): "5" [PhpNumber]
      - Variable: b [PhpNumber]
        - Literal (numeric): "6" [PhpNumber]
  - Variable: $text [PhpString]
    - Binary: . [PhpString]
      - Binary: . [PhpString]
        - Binary: . [PhpString]
          - Binary: . [PhpString]
            - Literal (string): "Hello world! value = " [PhpString]
            - Parenthesized [PhpNumber]
              - LocalVar: $value [PhpNumber]
          - Literal (string): ", map[a] = " [PhpString]
        - Parenthesized [any]
          - Call [any]
            - PropertyAccess (.get) [any]
              - LocalVar: $map_ [PhpMap<OneString, PhpNumber>]
            - Literal (string): "a" [PhpString]
      - Literal (string): "" [PhpString]
  - ExpressionStatement
    - Call [void]
      - MethodReference (static) [OneConsole::print]
      - Parenthesized [PhpString]
        - LocalVar: $text [PhpString]

