TestClass::test_method(): any
  - Variable: str [RubyString]
    - Literal (string): "a1A" [RubyString]
  - Variable: i [RubyNumber]
    - Literal (numeric): "0" [RubyNumber]
  - While
      - Binary: < [RubyNumber]
        - LocalVar: i [RubyNumber]
        - InstanceField: length [OneNumber]
          - LocalVar: str [RubyString]
    Body
      - Variable: c [OneCharacter]
        - Call [OneCharacter]
          - MethodReference [RubyString::get]
            - LocalVar: str [RubyString]
          - LocalVar: i [RubyNumber]
      - Variable: is_upper [OneBoolean]
        - Binary: && [OneBoolean]
          - Binary: <= [OneBoolean]
            - Literal (string): "A" [RubyString]
            - LocalVar: c [OneCharacter]
          - Binary: <= [OneBoolean]
            - LocalVar: c [OneCharacter]
            - Literal (string): "Z" [RubyString]
      - Variable: is_lower [OneBoolean]
        - Binary: && [OneBoolean]
          - Binary: <= [OneBoolean]
            - Literal (string): "a" [RubyString]
            - LocalVar: c [OneCharacter]
          - Binary: <= [OneBoolean]
            - LocalVar: c [OneCharacter]
            - Literal (string): "z" [RubyString]
      - Variable: is_number [OneBoolean]
        - Binary: && [OneBoolean]
          - Binary: <= [OneBoolean]
            - Literal (string): "0" [RubyString]
            - LocalVar: c [OneCharacter]
          - Binary: <= [OneBoolean]
            - LocalVar: c [OneCharacter]
            - Literal (string): "9" [RubyString]
      - ExpressionStatement
        - Call [void]
          - MethodReference (static) [OneConsole::print]
          - Conditional [RubyString]
            - LocalVar: is_upper [OneBoolean]
            - Literal (string): "upper" [RubyString]
            - Conditional [RubyString]
              - LocalVar: is_lower [OneBoolean]
              - Literal (string): "lower" [RubyString]
              - Conditional [RubyString]
                - LocalVar: is_number [OneBoolean]
                - Literal (string): "number" [RubyString]
                - Literal (string): "other" [RubyString]
      - ExpressionStatement
        - Binary: += [RubyNumber]
          - LocalVar: i [RubyNumber]
          - Literal (numeric): "1" [RubyNumber]

