OneConsole::print(str: any): void [static]
  <no body>

OneFile::readText(fn: TsString): OneString [static]
  <no body>

OneArray::length: TsNumber

OneArray::add(item: T): void
  <no body>

OneArray::get(index: TsNumber): T
  <no body>

OneArray::set(index: TsNumber, value: T): void
  <no body>

OneMap::get(key: K): V
  <no body>

OneMap::set(key: K, value: V): void
  <no body>

OneMap::remove(key: K): void
  <no body>

OneMap::hasKey(key: K): TsBoolean
  <no body>

OneMap::keys(): OneArray<K>
  <no body>

OneMap::values(): OneArray<V>
  <no body>

OneString::length: OneNumber

OneString::substring(start: TsNumber, end: TsNumber): OneString
  <no body>

OneString::split(separator: TsString): OneArray<OneString>
  <no body>

OneString::get(idx: TsNumber): OneCharacter
  <no body>

OneString::startsWith(str: TsString): OneBoolean
  <no body>

OneString::substrMatch(str: TsString, offset: TsNumber): OneBoolean
  <no body>

OneString::replace(from: TsString, to: TsString): OneString
  <no body>

OneError::raise(message: TsString): void [static, throws]
  <no body>

OneRegex::matchFromIndex(pattern: TsString, input: TsString, offset: TsNumber): OneArray<OneString> [static]
  <no body>

OneReflect::getClass(obj: any): OneClass [static]
  <no body>

OneReflect::getClassByName(name: any): OneClass [static]
  <no body>

OneClass::name: TsString

OneClass::getField(name: TsString): OneField
  <no body>

OneClass::getMethod(name: TsString): OneMethod
  <no body>

OneClass::getFields(): TsArray<OneField>
  <no body>

OneClass::getMethods(): TsArray<OneMethod>
  <no body>

OneField::name: TsString
OneField::isStatic: TsBoolean

OneField::getValue(obj: any): any
  <no body>

OneField::setValue(obj: any, value: any): void
  <no body>

OneMethod::name: TsString
OneMethod::isStatic: TsBoolean

OneMethod::call(obj: any, args: TsArray<any>): any
  <no body>

