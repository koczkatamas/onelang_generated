TestClass::testMethod(): TsString
  - Variable: x [TsString]
    - Literal (string): "x" [TsString]
  - Variable: y [TsString]
    - Literal (string): "y" [TsString]
  - Comment: "\n"
  - Variable: z [TsString]
    - Literal (string): "z" [TsString]
  - ExpressionStatement
    - Binary: += [any]
      - LocalVar: z [TsString]
      - Literal (string): "Z" [TsString]
  - ExpressionStatement
    - Binary: += [any]
      - LocalVar: z [TsString]
      - LocalVar: x [TsString]
  - Comment: "\n"
  - Variable: a [OneString]
    - Call [OneString]
      - MethodReference [TsString::substring]
        - Literal (string): "abcdef" [TsString]
      - Literal (numeric): "2" [TsNumber]
      - Literal (numeric): "4" [TsNumber]
  - Variable: arr [OneArray<OneString>]
    - Call [OneArray<OneString>]
      - MethodReference [TsString::split]
        - Literal (string): "ab  cd ef" [TsString]
      - Literal (string): " " [TsString]
  - Comment: "\n"
  - Return
    - Binary: + [any]
      - Binary: + [any]
        - Binary: + [any]
          - Binary: + [any]
            - Binary: + [any]
              - Binary: + [any]
                - Binary: + [any]
                  - LocalVar: z [TsString]
                  - Literal (string): "|" [TsString]
                - LocalVar: x [TsString]
              - LocalVar: y [TsString]
            - Literal (string): "|" [TsString]
          - LocalVar: a [OneString]
        - Literal (string): "|" [TsString]
      - Call [OneString]
        - MethodReference [OneArray<OneString>::get]
          - LocalVar: arr [OneArray<OneString>]
        - Literal (numeric): "2" [TsNumber]

