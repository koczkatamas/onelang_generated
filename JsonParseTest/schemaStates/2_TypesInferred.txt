main()
  - Variable: obj1 [OneJValue]
    - Call [OneJValue]
      - MethodReference (static) [OneJson::parse]
      - Literal (string): "{ \"a\":1, \"b\":2 }" [TsString]
  - If
    - Unary (prefix): ! [any]
      - Call [OneBoolean]
        - MethodReference [OneJValue::isObject]
          - LocalVar: obj1 [OneJValue]
    Then
      - ExpressionStatement
        - Call [void]
          - MethodReference (static, throws) [OneError::raise]
          - Literal (string): "expected to be object!" [TsString]
  - Variable: obj1Props [TsArray<OneJProperty>]
    - Call [TsArray<OneJProperty>]
      - MethodReference [OneJObject::getProperties]
        - Call [OneJObject]
          - MethodReference [OneJValue::asObject]
            - LocalVar: obj1 [OneJValue]
  - If
    - Binary: != [OneBoolean]
      - InstanceField: length [TsNumber]
        - LocalVar: obj1Props [TsArray<OneJProperty>]
      - Literal (numeric): "2" [TsNumber]
    Then
      - ExpressionStatement
        - Call [void]
          - MethodReference (static, throws) [OneError::raise]
          - Literal (string): "expected 2 properties" [TsString]
  - If
    - Binary: != [OneBoolean]
      - Call [any]
        - PropertyAccess (.getName) [any]
          - Call [void]
            - MethodReference [TsArray<OneJProperty>::get]
              - LocalVar: obj1Props [TsArray<OneJProperty>]
            - Literal (numeric): "0" [TsNumber]
      - Literal (string): "a" [TsString]
    Then
      - ExpressionStatement
        - Call [void]
          - MethodReference (static, throws) [OneError::raise]
          - Literal (string): "expected first property to be named 'a'" [TsString]
  - Variable: obj1Prop0Value [any]
    - Call [any]
      - PropertyAccess (.getValue) [any]
        - Call [void]
          - MethodReference [TsArray<OneJProperty>::get]
            - LocalVar: obj1Props [TsArray<OneJProperty>]
          - Literal (numeric): "0" [TsNumber]
      - LocalVar: obj1 [OneJValue]
  - If
    - Binary: || [any]
      - Unary (prefix): ! [any]
        - Call [any]
          - PropertyAccess (.isNumber) [any]
            - LocalVar: obj1Prop0Value [any]
      - Binary: != [OneBoolean]
        - Call [any]
          - PropertyAccess (.asNumber) [any]
            - LocalVar: obj1Prop0Value [any]
        - Literal (numeric): "1" [TsNumber]
    Then
      - ExpressionStatement
        - Call [void]
          - MethodReference (static, throws) [OneError::raise]
          - Literal (string): "expected 'a' to be 1 (number)" [TsString]
  - ExpressionStatement
    - Call [void]
      - MethodReference (static) [console::log]
      - TemplateString [OneString]
        - Call [OneNumber]
          - MethodReference [OneJValue::asNumber]
            - Call [OneJValue]
              - MethodReference [OneJObject::get]
                - Call [OneJObject]
                  - MethodReference [OneJValue::asObject]
                    - LocalVar: obj1 [OneJValue]
              - Literal (string): "b" [TsString]
